#!/usr/bin/env python3
import rospy

from tf2_ros import TransformBroadcaster
from geometry_msgs.msg import TransformStamped
from gazebo_msgs.msg import ModelStates

# Publishes TF mappings between world and all models

MODELS_IGNORE = ['ground_plane']

def main():
	br = TransformBroadcaster()

	r = rospy.Rate(30) # Hz
	while not rospy.is_shutdown():
		data = rospy.wait_for_message('/gazebo/model_states', ModelStates, timeout=60.0)
		for m, p in zip(data.name, data.pose):
			if m in MODELS_IGNORE:
				continue
			t = TransformStamped()
			t.header.stamp = rospy.Time.now()
			t.header.frame_id = 'map'
			t.child_frame_id = m
			t.transform.translation = p.position
			t.transform.rotation = p.orientation
			br.sendTransform(t)

		r.sleep()

if __name__ == '__main__':
	rospy.init_node('mapper')
	try:
		main()
	except rospy.ROSInterruptException:
		pass