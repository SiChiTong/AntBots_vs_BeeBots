#!/usr/bin/env python3
import rospy

from mouse_description.msg import MouseData
from mouse_description.msg import SensorData
from mouse_control.msg import Vision
from sensor_msgs.msg import LaserScan

# Aggregates sensor data

# Processing
def angCallback(data):
	global angd
	angd = data.ang

def visionCallback(data):
	global vision
	vision = data
	outData.hasFlag = vision.hasFlag

def laserCallback():
	MAX_RANGE = 2
	outData.maxRange = MAX_RANGE

	# left ir
	outData.leftDist = 0
	idx = (angd + 1) % 4
	if vision and vision.dist[idx] <= MAX_RANGE:
		outData.leftType = vision.type[idx]
		outData.leftFlag = vision.flag[idx]
		outData.leftDist = vision.dist[idx]
	# right ir
	outData.rightDist = 0
	idx = (angd - 1) % 4
	if vision and vision.dist[idx] <= MAX_RANGE:
		outData.rightType = vision.type[idx]
		outData.rightFlag = vision.flag[idx]
		outData.rightDist = vision.dist[idx]

	# center ir
	outData.centerDist = 0
	idx = angd
	if vision and vision.dist[idx] <= MAX_RANGE:
		outData.centerType = vision.type[idx]
		outData.centerFlag = vision.flag[idx]
		outData.centerDist = vision.dist[idx]

angd = 0
vision = None
outData = SensorData()

def main():
	rospy.Subscriber('telemetry', MouseData, angCallback)
	rospy.Subscriber('vision', Vision, visionCallback)
	pub = rospy.Publisher('sensor_data', SensorData, queue_size=10)

	r = rospy.Rate(30)
	while not rospy.is_shutdown():
		laserCallback()
		pub.publish(outData)
		r.sleep()

if __name__ == '__main__':
	rospy.init_node('sensor')
	try:
		main()
	except rospy.ROSInterruptException:
		pass